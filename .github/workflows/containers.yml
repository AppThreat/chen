name: Upload Container image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:    # allow to manually trigger this workflow

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: appthreat/chen-platform

jobs:
  deploy:
    if: github.repository_owner == 'appthreat'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Delete `.rustup` directory
        run: rm -rf /home/runner/.rustup # to save disk space
        if: runner.os == 'Linux'
      - name: Delete `.cargo` directory # to save disk space
        run: rm -rf /home/runner/.cargo
        if: runner.os == 'Linux'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.sbt
            ~/.coursier
          key: ${{ runner.os }}-sbt-${{ hashfiles('**/build.sbt') }}
      - run: |
          sbt stage createDistribution
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SCALAPY_PYTHON_LIBRARY: "python3.11"
      - name: Export python requirements
        run: |
          python3.11 -m pip install --upgrade pip
          python3.11 -m pip install poetry
          python3.11 -m poetry export -f requirements.txt --with=science --output target/chen-science-requirements.txt
      - name: Upload chen to ghcr
        run: |
          cd target
          echo $GITHUB_TOKEN | oras login ghcr.io -u $GITHUB_USERNAME --password-stdin
          oras push ghcr.io/$IMAGE_NAME:v1 \
            --annotation-file ../ci/annotations.json \
            ./chen.zip:application/vnd.appthreat.chen.layer.v1+tar \
            ./chen-science-requirements.txt:application/vnd.appthreat.chen.layer.v1+tar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.actor }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/appthreat/chen
